<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2015. Axon Framework
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:tool="http://www.springframework.org/schema/tool"
            xmlns:beans="http://www.springframework.org/schema/beans"
            xmlns="http://www.axonframework.org/schema/amqp"
            targetNamespace="http://www.axonframework.org/schema/amqp"
            elementFormDefault="qualified">

    <xsd:import namespace="http://www.springframework.org/schema/beans"
                schemaLocation="http://www.springframework.org/schema/beans/spring-beans.xsd"/>
    <xsd:import namespace="http://www.springframework.org/schema/tool"
                schemaLocation="http://www.springframework.org/schema/tool/spring-tool.xsd"/>
    <xsd:import namespace="http://www.axonframework.org/schema/core"
                schemaLocation="http://www.axonframework.org/schema/axon-core-3.0.xsd"/>

    <xsd:element name="eventBus">
        <xsd:annotation>
            <xsd:documentation>
                Spring context schema extension for the definition of an EventBus instance.
            </xsd:documentation>
            <xsd:appinfo>
                <tool:annotation>
                    <tool:exports type="org.axonframework.eventhandling.amqp.spring.SpringAMQPEventBus"/>
                    <tool:exports type="org.axonframework.eventhandling.amqp.spring.ListenerContainerLifecycleManager"/>
                </tool:annotation>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="beans:identifiedType">
                    <xsd:all>
                        <xsd:element name="default-configuration" minOccurs="0" type="amqpConfiguration"/>
                    </xsd:all>
                    <xsd:attribute name="durable" type="xsd:string" use="optional">
                        <xsd:annotation>
                            <xsd:documentation>
                                Indicates whether the Durable flag should be set on messages. Durable message will
                                survive a Broker restart if they
                                were placed on a queue that is durable itself.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="transactional" type="xsd:boolean" use="optional">
                        <xsd:annotation>
                            <xsd:documentation>
                                Indicates whether messages should be dispatched withing a AMQP Transaction (using
                                txSelect and txCommit). Cannot be used in combination with wait-for-publisher-ack=true
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="wait-for-publisher-ack" type="xsd:boolean" use="optional">
                        <xsd:annotation>
                            <xsd:documentation>
                                Indicates whether the client should wait for a publisher acknowledgement from the
                                broker. This is generally faster than using transactions, but isn't supported on all
                                AMQP broker implementations. Cannot be used in combination with transactional=true.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="exchange-name" type="xsd:string" use="optional">
                        <xsd:annotation>
                            <xsd:documentation>
                                The name of the exchange to which messages should be sent. Defaults to "Axon.EventBus".
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="connection-factory" type="xsd:string" use="optional">
                        <xsd:annotation>
                            <xsd:documentation>
                                Reference to a ConnectionFactory bean that will provide the Connections and Channels
                                to send and receive messages on. If none is provided, the Terminal will try to autowire
                                one from the application context.
                            </xsd:documentation>
                            <xsd:appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type
                                            type="org.springframework.amqp.rabbit.connection.ConnectionFactory"/>
                                </tool:annotation>
                            </xsd:appinfo>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="message-converter" type="xsd:string" use="optional">
                        <xsd:annotation>
                            <xsd:documentation>
                                Reference to an AMQPMessageConverter that converts an EventMessage to an AMQP Message
                                (byte[]) and vice versa. Defaults to a message converter that uses a serializer to
                                serialize the payload and meta data. Typically, a message converter will only need to be
                                configured if the other applications
                                need to read messages from the queues.
                            </xsd:documentation>
                            <xsd:appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type
                                            type="org.axonframework.eventhandling.amqp.AMQPMessageConverter"/>
                                </tool:annotation>
                            </xsd:appinfo>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="serializer" type="xsd:string" use="optional">
                        <xsd:annotation>
                            <xsd:documentation>
                                Reference to the serializer to serialize message payload and meta data with. This
                                attribute is ignored if a MessageConverter is configured. Defaults to an autowired
                                reference.
                            </xsd:documentation>
                            <xsd:appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type
                                            type="org.axonframework.serialization.Serializer"/>
                                </tool:annotation>
                            </xsd:appinfo>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="routing-key-resolver" type="xsd:string" use="optional">
                        <xsd:annotation>
                            <xsd:documentation>
                                Reference to a resolver that provides an AMQP Routing Key for each published message.
                                These routing keys are used by AMQP Message Brokers to dispatch messages from the
                                Exchange to Queues. Defaults to a routing key resolver that returns the package name of
                                a message's payload as Routing Key.
                            </xsd:documentation>
                            <xsd:appinfo>
                                <tool:annotation kind="ref">
                                    <tool:expected-type
                                            type="org.axonframework.eventhandling.amqp.RoutingKeyResolver"/>
                                </tool:annotation>
                            </xsd:appinfo>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="configuration">
        <xsd:annotation>
            <xsd:documentation>
                Defines the configuration of an AMQP Message Listener. This can be used to provide configuration for
                EventProcessors that will be connected to an AMQP Queue by the AMQP Terminal.
            </xsd:documentation>
            <xsd:appinfo>
                <tool:annotation>
                    <tool:exports type="org.axonframework.eventhandling.amqp.spring.SpringAMQPConsumerConfiguration"/>
                </tool:annotation>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="amqpConfiguration">
                    <xsd:attribute name="id" use="optional" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The unique identifier for a bean. A bean id may not be used more than once
                                within the same &lt;beans&gt; element.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attribute name="queue-name" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                The name of the queue from which the consumer should read events.
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:complexType name="amqpConfiguration">
        <xsd:attribute name="executor" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    A reference to the Executor for executing listener invokers. Default is a
                    SimpleAsyncTaskExecutor, using internally managed threads.
                </xsd:documentation>
                <xsd:appinfo>
                    <tool:annotation kind="ref">
                        <tool:expected-type type="java.util.concurrent.Executor"/>
                    </tool:annotation>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="error-handler" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    A reference to an ErrorHandler strategy for handling any uncaught Exceptions
                    that may occur during the handling of Events.
                </xsd:documentation>
                <xsd:appinfo>
                    <tool:annotation kind="ref">
                        <tool:expected-type type="org.springframework.util.ErrorHandler"/>
                    </tool:annotation>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="acknowledge">
            <xsd:annotation>
                <xsd:documentation>
                    The acknowledge mode: "auto", "manual", or "none".
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:union>
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:NMTOKEN">
                            <xsd:enumeration value="auto"/>
                            <xsd:enumeration value="manual"/>
                            <xsd:enumeration value="none"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:union>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="transaction-manager" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    A reference to an external PlatformTransactionManager.
                </xsd:documentation>
                <xsd:appinfo>
                    <tool:annotation kind="ref">
                        <tool:expected-type type="org.springframework.transaction.PlatformTransactionManager"/>
                    </tool:annotation>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="concurrency" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The number of concurrent consumers to start for each listener.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="prefetch" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    Tells the broker how many messages to send to each consumer in a single request. Often this can be
                    set quite high
                    to improve throughput. It should be greater than or equal to the transaction size.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="transaction-size" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    Tells the container how many messages to process in a single transaction (if the channel is
                    transactional). For
                    best results it should be less than or equal to the prefetch count.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="advice-chain" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    Reference to a chain of AOP advice to be applied to the listener.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="recovery-interval" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The interval (in millis) at which a reconnect will be attempted if a connection was lost or rejected
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="receive-timeout" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The maximum amount of time (in millis) to wait while receiving a message.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="shutdown-timeout" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    The maximum amount of time (millis) to wait for a shutdown confirmation from the server
                </xsd:documentation>
            </xsd:annotation>

        </xsd:attribute>
        <xsd:attribute name="exclusive" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation>
                    Whether or not this connection should consumer from a queue in exclusive mode. When a consumer
                    consumes
                    in exclusive mode, the server will reject any other consumer when it attempts to read from the
                    queue.
                    This requires concurrency to be 1.
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:complexType>

</xsd:schema>
