<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2012. Axon Framework
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:axon="http://www.axonframework.org/schema/core"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.axonframework.org/schema/core http://www.axonframework.org/schema/axon-core.xsd
                           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <context:annotation-config/>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <import resource="classpath:/META-INF/spring/db-context.xml"/>

    <axon:jdbc-saga-repository id="emptySagaRepository"/>
    <axon:jdbc-saga-repository id="sagaRepositoryWithConnectionProvider" connection-provider="connectionProvider"/>
    <axon:jdbc-saga-repository id="sagaRepositoryWithDataSource" data-source="dataSource"/>
    <axon:jdbc-saga-repository id="sagaRepositoryWithAllConfig" connection-provider="connectionProvider"
                               resource-injector="resourceInjector" saga-serializer="serializer"
                               sql-schema="sqlSchema"/>
    <axon:jdbc-saga-repository id="cachingSagaRepository" connection-provider="connectionProvider"
                               resource-injector="resourceInjector" saga-serializer="serializer"
                               sql-schema="sqlSchema">
        <axon:cache-config associations-cache="nocache" saga-cache="nocache"/>
    </axon:jdbc-saga-repository>

    <axon:jdbc-saga-repository id="noCacheSagaRepository" connection-provider="connectionProvider"
                               resource-injector="resourceInjector" saga-serializer="serializer"
                               sql-schema="sqlSchema">
        <axon:cache-config/>
    </axon:jdbc-saga-repository>

    <axon:jdbc-event-store id="emptyJdbcEventStore"/>
    <axon:jdbc-event-store id="jcbcEventStoreWithConnectionProvider" connection-provider="connectionProvider"
                           force-utc-timestamp="true"/>
    <axon:jdbc-event-store id="jcbcEventStoreWithDataSource" data-source="dataSource"
                           sql-schema="eventSqlSchema"/>
    <axon:jdbc-event-store id="jdbcEventStoreWithAllConfig" batch-size="100"
                           event-entry-store-ref="eventEntryStore"
                           event-serializer="serializer" max-snapshots-archived="2"
                           persistence-exception-resolver="persistenceExceptionResolver">
        <axon:upcasters>
            <bean class="org.axonframework.spring.testutils.MockitoMockFactoryBean">
                <property name="mockType" value="org.axonframework.serialization.upcasting.Upcaster"/>
            </bean>
        </axon:upcasters>
    </axon:jdbc-event-store>

    <bean id="nocache" class="org.axonframework.common.caching.NoCache"/>

    <bean id="connectionProvider" class="org.axonframework.spring.testutils.MockitoMockFactoryBean">
        <property name="mockType" value="org.axonframework.common.jdbc.ConnectionProvider"/>
    </bean>
    <bean id="resourceInjector" class="org.axonframework.spring.testutils.MockitoMockFactoryBean">
        <property name="mockType" value="org.axonframework.eventhandling.saga.ResourceInjector"/>
    </bean>
    <bean id="serializer" class="org.axonframework.serialization.xml.XStreamSerializer"/>

    <bean id="sqlSchema" class="org.axonframework.spring.testutils.MockitoMockFactoryBean">
        <property name="mockType" value="org.axonframework.eventhandling.saga.repository.jdbc.SagaSqlSchema"/>
    </bean>
    <bean id="eventSqlSchema" class="org.axonframework.spring.testutils.MockitoMockFactoryBean">
        <property name="mockType" value="org.axonframework.eventsourcing.eventstore.jdbc.EventSqlSchema"/>
    </bean>
    <bean id="persistenceExceptionResolver" class="org.axonframework.spring.testutils.MockitoMockFactoryBean">
        <property name="mockType" value="org.axonframework.common.jdbc.PersistenceExceptionResolver"/>
    </bean>
    <bean id="eventEntryStore" class="org.axonframework.spring.testutils.MockitoMockFactoryBean">
        <property name="mockType" value="org.axonframework.eventsourcing.eventstore.jdbc.EventEntryStore"/>
    </bean>

</beans>
